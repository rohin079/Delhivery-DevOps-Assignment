name: Python application
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Buid and push docker images
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: rohin07/delhivery
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          tags: 1.1.1-${{github.run_number}}
      - name: Checkout delhivery-config
        uses: actions/checkout@v3
        with:
          repository: rohin079/delhivery-config
          token: ${{ secrets.REPO_TOKEN }}
          #  ref: main
          path: ./delhivery-config
      - name: Update deployment YAML
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq e -i '.spec.template.spec.containers[0].image = "rohin07/delhivery:1.1.1-${{ github.run_number }}"' ./delhivery-config/dev/frontend-deployment.yaml
          yq e -i '.spec.template.spec.containers[0].image = "rohin07/delhivery:1.1.1-${{ github.run_number }}"' ./delhivery-config/dev/frontend-rollout.yaml
      - name: Commit and Push changes to config files
        run: |
          cd ./delhivery-config
          git add .
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git commit -am "updated: build number for frontend image"
          git push